# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: pr-validation

on:
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.head_ref }}.${{ github.sha }}.pr-validation
  cancel-in-progress: true

jobs:
  premerge:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Disable session history
        uses: rfprod/nx-ng-starter/.github/actions/disable-session-history@main

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            nx:
              - '.storybook/**'
              - 'apps/**'
              - 'libs/**'
              - 'tools/**'
              - 'tsconfig*'
              - 'nx.json'
              - 'angular.json'
              - 'package.json'
              - 'yarn.lock'
              - 'babel.config.json'
              - 'tools/generators/**'
              - 'tools/proto/**'
              - 'tools/ts/**'
              - 'tools/*.*'
              - 'jest*'
              - '.eslint*'
              - '.prettier*'
              - '.protolint.yaml'
              - '.stylelint*'
            dependencies:
              - 'yarn.lock'
            shelltools:
              - 'tools/shell/**'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Configure kernel
        uses: rfprod/nx-ng-starter/.github/actions/configure-kernel@main

      - name: Use yarn v1 required for integrity check
        uses: rfprod/nx-ng-starter/.github/actions/use-yarn-v1@main

      - name: Workspace cache
        uses: rfprod/nx-ng-starter/.github/actions/workspace-cache@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Workspace integrity check
        if: steps.changes.outputs.dependencies == 'false'
        run: yarn workspace:integrity-check

      - name: Install project dependencies
        run: yarn install:ci

      - name: Validate the commit messages
        run: |
          git checkout -b premerge
          git fetch origin main:main
          npx commitlint --from main

      - name: Process dependencies with ngcc
        if: steps.changes.outputs.nx == 'true'
        run: yarn ngcc

      - name: Lint affected
        if: steps.changes.outputs.nx == 'true'
        run: npx nx affected --target=lint --base=origin/main --head=HEAD --parallel --max-parallel=2

      - name: Lint shell
        if: steps.changes.outputs.shelltools == 'true'
        run: |
          sudo apt install shellcheck
          yarn lint:shell

      - name: Unit test affected (without code coverage)
        if: steps.changes.outputs.nx == 'true'
        run: npx nx affected --target=test --base=origin/main --head=HEAD --pass-with-no-tests --code-coverage=false --watch=false --run-in-band --ci

      - name: Build all (development)
        if: steps.changes.outputs.nx == 'true'
        run: npx nx affected --target=build --base=origin/main --head=HEAD

      - name: Build storybook
        if: steps.changes.outputs.nx == 'true'
        run: npx nx run documentation:build-storybook
