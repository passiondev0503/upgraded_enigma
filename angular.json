{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "projects": {
    "api": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "configurations": {
            "firebase": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.firebase.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            },
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "options": {
            "assets": ["apps/api/src/assets"],
            "budgets": [
              {
                "maximumError": "16mb",
                "maximumWarning": "12mb",
                "type": "initial"
              }
            ],
            "buildLibsFromSource": true,
            "main": "apps/api/src/main.ts",
            "outputPath": "dist/apps/api",
            "tsConfig": "apps/api/tsconfig.app.json"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/api/.eslintrc.json",
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "configurations": {
            "firebase": {
              "buildTarget": "api:build:firebase"
            },
            "production": {
              "buildTarget": "api:build:production"
            }
          },
          "options": {
            "buildTarget": "api:build"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/api/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/api"]
        }
      },
      "prefix": "app",
      "projectType": "application",
      "root": "apps/api",
      "schematics": {},
      "sourceRoot": "apps/api/src",
      "tags": ["scope:api", "type:application"]
    },
    "backend-auth": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/backend-auth/.eslintrc.json",
            "lintFilePatterns": ["libs/backend-auth/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/backend-auth/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/backend-auth"]
        }
      },
      "projectType": "library",
      "root": "libs/backend-auth",
      "sourceRoot": "libs/backend-auth/src",
      "tags": ["scope:backend-auth", "type:feature"]
    },
    "backend-diagnostics": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/backend-diagnostics/.eslintrc.json",
            "lintFilePatterns": ["libs/backend-diagnostics/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/backend-diagnostics/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/backend-diagnostics"]
        }
      },
      "projectType": "library",
      "root": "libs/backend-diagnostics",
      "sourceRoot": "libs/backend-diagnostics/src",
      "tags": ["scope:backend-diagnostics", "type:data-access"]
    },
    "backend-interfaces": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/backend-interfaces/.eslintrc.json",
            "lintFilePatterns": ["libs/backend-interfaces/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/backend-interfaces/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/backend-interfaces"]
        }
      },
      "projectType": "library",
      "root": "libs/backend-interfaces",
      "schematics": {},
      "sourceRoot": "libs/backend-interfaces/src",
      "tags": ["scope:backend-interfaces", "type:util"]
    },
    "backend-logger": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/backend-logger/.eslintrc.json",
            "lintFilePatterns": ["libs/backend-logger/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/backend-logger/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/backend-logger"]
        }
      },
      "projectType": "library",
      "root": "libs/backend-logger",
      "sourceRoot": "libs/backend-logger/src",
      "tags": ["scope:backend-logger", "type:feature"]
    },
    "backend-websocket": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/backend-websocket/.eslintrc.json",
            "lintFilePatterns": ["libs/backend-websocket/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/backend-websocket/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/backend-websocket"]
        }
      },
      "projectType": "library",
      "root": "libs/backend-websocket",
      "sourceRoot": "libs/backend-websocket/src",
      "tags": ["scope:backend-websocket", "type:feature"]
    },
    "client": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "configurations": {
            "analyze-bundle": {
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "apps/client/src/environments/environment.ts",
                  "with": "apps/client/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": true
            },
            "production": {
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "apps/client/src/environments/environment.ts",
                  "with": "apps/client/src/environments/environment.prod.ts"
                }
              ],
              "ngswConfigPath": "apps/client/ngsw-config.json",
              "optimization": true,
              "outputHashing": "all",
              "serviceWorker": true,
              "sourceMap": false
            }
          },
          "options": {
            "allowedCommonJsDependencies": ["hammerjs"],
            "aot": true,
            "assets": [
              "apps/client/src/favicon.ico",
              "apps/client/src/assets",
              "apps/client/src/manifest.webmanifest",
              {
                "glob": "**/*",
                "input": "./libs/client-core/src/lib/assets",
                "output": "./assets"
              }
            ],
            "baseHref": "/",
            "budgets": [
              {
                "maximumError": "16mb",
                "maximumWarning": "12mb",
                "type": "initial"
              },
              {
                "maximumError": "10kb",
                "maximumWarning": "6kb",
                "type": "anyComponentStyle"
              }
            ],
            "buildOptimizer": false,
            "extractLicenses": true,
            "index": "apps/client/src/index.html",
            "main": "apps/client/src/main.ts",
            "namedChunks": true,
            "optimization": false,
            "outputHashing": "none",
            "outputPath": "dist/apps/client",
            "polyfills": "apps/client/src/polyfills.ts",
            "scripts": [],
            "sourceMap": true,
            "styles": [
              "node_modules/roboto-fontface/css/roboto/roboto-fontface.css",
              "node_modules/material-design-icon-fonts-self-hosted-web/iconfont/material-icons.css",
              "apps/client/src/styles.scss",
              "libs/client-core/src/lib/styles/styles.scss"
            ],
            "tsConfig": "apps/client/tsconfig.app.json",
            "vendorChunk": true
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "client:build"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/client/.eslintrc.json",
            "lintFilePatterns": ["apps/client/**/*.ts"]
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "client:build:production"
            }
          },
          "options": {
            "browserTarget": "client:build",
            "proxyConfig": "apps/client/proxy.conf.json"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "assets": [
              "apps/client/src/favicon.ico",
              "apps/client/src/assets",
              {
                "glob": "**/*",
                "input": "./libs/client-core/src/lib/assets",
                "output": "./assets"
              }
            ],
            "jestConfig": "apps/client/jest.config.ts",
            "passWithNoTests": true,
            "scripts": [],
            "styles": [
              "node_modules/roboto-fontface/css/roboto/roboto-fontface.css",
              "node_modules/material-design-icon-fonts-self-hosted-web/iconfont/material-icons.css",
              "apps/client/src/styles.scss",
              "libs/client-core/src/lib/styles/styles.scss"
            ]
          },
          "outputs": ["coverage/apps/client"]
        }
      },
      "prefix": "app",
      "projectType": "application",
      "root": "apps/client",
      "schematics": {
        "@nrwl/workspace:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "apps/client/src",
      "tags": ["scope:client", "type:application"]
    },
    "client-api": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/client-api/src/environments/environment.ts",
                  "with": "apps/client-api/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "options": {
            "assets": ["apps/client-api/src/assets"],
            "main": "apps/client-api/src/main.ts",
            "outputPath": "dist/apps/client-api",
            "tsConfig": "apps/client-api/tsconfig.app.json"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/client-api/.eslintrc.json",
            "lintFilePatterns": ["apps/client-api/**/*.ts"]
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "client-api:build"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/client-api/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/client-api"]
        }
      },
      "prefix": "app",
      "projectType": "application",
      "root": "apps/client-api",
      "sourceRoot": "apps/client-api/src",
      "tags": ["scope:client-api", "type:application"]
    },
    "client-chatbot": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-chatbot/.eslintrc.json",
            "lintFilePatterns": ["libs/client-chatbot/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-chatbot/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-chatbot"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-chatbot",
      "sourceRoot": "libs/client-chatbot/src",
      "tags": ["scope:client-chatbot", "type:feature"]
    },
    "client-core": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-core/.eslintrc.json",
            "lintFilePatterns": ["libs/client-core/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-core/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-core"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-core",
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      },
      "sourceRoot": "libs/client-core/src",
      "tags": ["scope:client-core", "type:feature"]
    },
    "client-core-components": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "options": {
            "browserTarget": "client-core-components:build-storybook",
            "compodoc": false,
            "configDir": "libs/client-core-components/.storybook",
            "outputDir": "dist/storybook/client-core-components"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-core-components/.eslintrc.json",
            "lintFilePatterns": ["libs/client-core-components/**/*.ts"]
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "options": {
            "browserTarget": "client-core-components:build-storybook",
            "compodoc": false,
            "configDir": "libs/client-core-components/.storybook",
            "port": 4400
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-core-components/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-core-components"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-core-components",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-core-components/src",
      "tags": ["scope:client-core-components", "type:feature"]
    },
    "client-core-components-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "configurations": {
            "ci": {
              "devServerTarget": "client-core-components:storybook:ci"
            }
          },
          "options": {
            "cypressConfig": "apps/client-core-components-e2e/cypress.json",
            "devServerTarget": "client-core-components:storybook",
            "tsConfig": "apps/client-core-components-e2e/tsconfig.e2e.json"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/client-core-components-e2e/.eslintrc.json",
            "lintFilePatterns": ["apps/client-core-components-e2e/**/*.ts"]
          }
        }
      },
      "implicitDependencies": ["client-core-components"],
      "projectType": "application",
      "root": "apps/client-core-components-e2e",
      "sourceRoot": "apps/client-core-components-e2e/src",
      "tags": ["scope:client-core-components-e2e", "type:e2e"]
    },
    "client-diagnostics": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "options": {
            "browserTarget": "client-diagnostics:build-storybook",
            "compodoc": false,
            "configDir": "libs/client-diagnostics/.storybook",
            "outputDir": "dist/storybook/client-diagnostics"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-diagnostics/.eslintrc.json",
            "lintFilePatterns": ["libs/client-diagnostics/**/*.ts"]
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "options": {
            "browserTarget": "client-diagnostics:build-storybook",
            "compodoc": false,
            "configDir": "libs/client-diagnostics/.storybook",
            "port": 4400
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-diagnostics/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-diagnostics"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-diagnostics",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-diagnostics/src",
      "tags": ["scope:client-diagnostics", "type:feature"]
    },
    "client-diagnostics-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "configurations": {
            "ci": {
              "devServerTarget": "client-diagnostics:storybook:ci"
            }
          },
          "options": {
            "cypressConfig": "apps/client-diagnostics-e2e/cypress.json",
            "devServerTarget": "client-diagnostics:storybook",
            "tsConfig": "apps/client-diagnostics-e2e/tsconfig.e2e.json"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/client-diagnostics-e2e/.eslintrc.json",
            "lintFilePatterns": ["apps/client-diagnostics-e2e/**/*.ts"]
          }
        }
      },
      "implicitDependencies": ["client-diagnostics"],
      "projectType": "application",
      "root": "apps/client-diagnostics-e2e",
      "sourceRoot": "apps/client-diagnostics-e2e/src",
      "tags": ["scope:client-diagnostics-e2e", "type:e2e"]
    },
    "client-directives": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-directives/.eslintrc.json",
            "lintFilePatterns": ["libs/client-directives/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-directives/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-diagnostics"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-directives",
      "sourceRoot": "libs/client-directives/src",
      "tags": ["scope:client-directives", "type:ui"]
    },
    "client-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "configurations": {
            "production": {
              "devServerTarget": "client:serve:production"
            }
          },
          "options": {
            "cypressConfig": "apps/client-e2e/cypress.json",
            "devServerTarget": "client:serve",
            "tsConfig": "apps/client-e2e/tsconfig.e2e.json"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/client-e2e/.eslintrc.json",
            "lintFilePatterns": ["apps/client-e2e/**/*.ts"]
          }
        }
      },
      "implicitDependencies": ["client"],
      "projectType": "application",
      "root": "apps/client-e2e",
      "sourceRoot": "apps/client-e2e/src",
      "tags": ["scope:client-e2e", "type:e2e"]
    },
    "client-material": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-material/.eslintrc.json",
            "lintFilePatterns": ["libs/client-material/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-material/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-material"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-material",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-material/src",
      "tags": ["scope:client-material", "type:util"]
    },
    "client-pipes": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-pipes/.eslintrc.json",
            "lintFilePatterns": ["libs/client-pipes/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-pipes/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-pipes"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-pipes",
      "sourceRoot": "libs/client-pipes/src",
      "tags": ["scope:client-pipes", "type:data-access"]
    },
    "client-services": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-services/.eslintrc.json",
            "lintFilePatterns": ["libs/client-services/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-services/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-services"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-services",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-services/src",
      "tags": ["scope:client-services", "type:util"]
    },
    "client-sidebar": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-sidebar/.eslintrc.json",
            "lintFilePatterns": ["libs/client-sidebar/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-sidebar/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-sidebar"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-sidebar",
      "sourceRoot": "libs/client-sidebar/src",
      "tags": ["scope:client-sidebar", "type:feature"]
    },
    "client-store": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-store/.eslintrc.json",
            "lintFilePatterns": ["libs/client-store/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-store/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-store"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-store",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-store/src",
      "tags": ["scope:client-store", "type:data-access"]
    },
    "client-translate": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-translate/.eslintrc.json",
            "lintFilePatterns": ["libs/client-translate/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-translate/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-translate"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-translate",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-translate/src",
      "tags": ["scope:client-translate", "type:util"]
    },
    "client-unit-testing": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-unit-testing/.eslintrc.json",
            "lintFilePatterns": ["libs/client-unit-testing/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-unit-testing/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-unit-testing"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-unit-testing",
      "schematics": {
        "@nrwl/angular:component": {
          "styleext": "scss"
        }
      },
      "sourceRoot": "libs/client-unit-testing/src",
      "tags": ["scope:client-unit-testing", "type:unit-testing"]
    },
    "client-user": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-user/.eslintrc.json",
            "lintFilePatterns": ["libs/client-user/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-user/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-user"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-user",
      "sourceRoot": "libs/client-user/src",
      "tags": ["scope:client-user", "type:feature"]
    },
    "client-util": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-util/.eslintrc.json",
            "lintFilePatterns": ["libs/client-util/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-util/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-util"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-util",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "libs/client-util/src",
      "tags": ["scope:client-util", "type:util"]
    },
    "client-util-sentry": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-util-sentry/.eslintrc.json",
            "lintFilePatterns": ["libs/client-util-sentry/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-util-sentry/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-util-sentry"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-util-sentry",
      "sourceRoot": "libs/client-util-sentry/src",
      "tags": ["scope:client-util-sentry", "type:util"]
    },
    "client-workspaces": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "libs/client-workspaces/.eslintrc.json",
            "lintFilePatterns": ["libs/client-workspaces/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/client-workspaces/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/client-workspaces"]
        }
      },
      "prefix": "app",
      "projectType": "library",
      "root": "libs/client-workspaces",
      "sourceRoot": "libs/client-workspaces/src",
      "tags": ["scope:client-workspaces", "type:feature"]
    },
    "documentation": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "configurations": {
            "analyze-bundle": {
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "apps/documentation/src/environments/environment.ts",
                  "with": "apps/documentation/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": true
            },
            "production": {
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "apps/documentation/src/environments/environment.ts",
                  "with": "apps/documentation/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false
            }
          },
          "options": {
            "allowedCommonJsDependencies": ["hammerjs"],
            "aot": true,
            "assets": [
              "apps/documentation/src/favicon.ico",
              "apps/documentation/src/assets",
              {
                "glob": "**/*.*",
                "input": "./libs/client-core/src/lib/assets",
                "output": "assets"
              },
              {
                "glob": "*.md",
                "input": "./",
                "output": "md/"
              },
              {
                "glob": "**/*.md",
                "input": "apps",
                "output": "md/apps"
              },
              {
                "glob": "**/*.md",
                "input": "libs",
                "output": "md/libs"
              },
              {
                "glob": "**/*.md",
                "input": "tools",
                "output": "md/tools"
              }
            ],
            "baseHref": "/",
            "budgets": [
              {
                "maximumError": "16mb",
                "maximumWarning": "12mb",
                "type": "initial"
              },
              {
                "maximumError": "10kb",
                "maximumWarning": "6kb",
                "type": "anyComponentStyle"
              }
            ],
            "buildOptimizer": false,
            "extractLicenses": true,
            "index": "apps/documentation/src/index.html",
            "main": "apps/documentation/src/main.ts",
            "namedChunks": true,
            "optimization": {
              "fonts": false,
              "scripts": false,
              "styles": {
                "inlineCritical": false,
                "minify": false
              }
            },
            "outputHashing": "none",
            "outputPath": "dist/apps/documentation",
            "polyfills": "apps/documentation/src/polyfills.ts",
            "scripts": [
              "node_modules/marked/lib/marked.umd.js",
              "node_modules/prismjs/prism.js",
              "node_modules/prismjs/components/prism-csharp.min.js",
              "node_modules/prismjs/components/prism-css.min.js",
              "node_modules/prismjs/plugins/line-numbers/prism-line-numbers.min.js",
              "node_modules/prismjs/plugins/line-highlight/prism-line-highlight.min.js",
              "node_modules/emoji-toolkit/lib/js/joypixels.min.js",
              "node_modules/katex/dist/katex.min.js"
            ],
            "sourceMap": true,
            "styles": [
              "apps/documentation/src/styles.scss",
              "libs/client-core/src/lib/styles/styles.scss",
              "node_modules/roboto-fontface/css/roboto/roboto-fontface.css",
              "node_modules/material-design-icon-fonts-self-hosted-web/iconfont/material-icons.css",
              "node_modules/prismjs/themes/prism-okaidia.css",
              "node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css",
              "node_modules/prismjs/plugins/line-highlight/prism-line-highlight.css",
              "node_modules/katex/dist/katex.min.css"
            ],
            "tsConfig": "apps/documentation/tsconfig.app.json",
            "vendorChunk": true
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "options": {
            "browserTarget": "documentation:build",
            "compodoc": false,
            "configDir": "apps/documentation/.storybook",
            "outputDir": "dist/storybook/documentation"
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "documentation:build"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/documentation/.eslintrc.json",
            "lintFilePatterns": ["apps/documentation/**/*.ts"]
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "documentation:build:production"
            }
          },
          "options": {
            "browserTarget": "documentation:build"
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "options": {
            "browserTarget": "documentation:build",
            "compodoc": false,
            "configDir": "apps/documentation/.storybook",
            "port": 4400
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/documentation/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/documentation"]
        }
      },
      "prefix": "app",
      "projectType": "application",
      "root": "apps/documentation",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "sourceRoot": "apps/documentation/src",
      "tags": ["scope:documentation", "type:application"]
    },
    "documentation-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "configurations": {
            "production": {
              "devServerTarget": "documentation:serve:production"
            }
          },
          "options": {
            "cypressConfig": "apps/documentation-e2e/cypress.json",
            "devServerTarget": "documentation:serve",
            "tsConfig": "apps/documentation-e2e/tsconfig.e2e.json"
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/documentation-e2e/.eslintrc.json",
            "lintFilePatterns": ["apps/documentation-e2e/**/*.ts"]
          }
        }
      },
      "implicitDependencies": ["documentation"],
      "projectType": "application",
      "root": "apps/documentation-e2e",
      "sourceRoot": "apps/documentation-e2e/src",
      "tags": ["scope:documentation-e2e", "type:e2e"]
    },
    "server-dev": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/server-dev/src/environments/environment.ts",
                  "with": "apps/server-dev/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "options": {
            "assets": ["apps/server-dev/src/assets"],
            "main": "apps/server-dev/src/main.ts",
            "outputPath": "dist/apps/server-dev",
            "tsConfig": "apps/server-dev/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/server-dev/.eslintrc.json",
            "lintFilePatterns": ["apps/server-dev/**/*.ts"]
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "configurations": {
            "production": {
              "buildTarget": "server-dev:build:production"
            }
          },
          "options": {
            "buildTarget": "server-dev:build"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/server-dev/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/server-dev"]
        }
      },
      "projectType": "application",
      "root": "apps/server-dev",
      "sourceRoot": "apps/server-dev/src",
      "tags": []
    },
    "server-prod": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/server-prod/src/environments/environment.ts",
                  "with": "apps/server-prod/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "options": {
            "assets": ["apps/server-prod/src/assets"],
            "main": "apps/server-prod/src/main.ts",
            "outputPath": "dist/apps/server-prod",
            "tsConfig": "apps/server-prod/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "apps/server-prod/.eslintrc.json",
            "lintFilePatterns": ["apps/server-prod/**/*.ts"]
          },
          "outputs": ["{options.outputFile}"]
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "server-prod:build"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/server-prod/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/server-prod"]
        }
      },
      "projectType": "application",
      "root": "apps/server-prod",
      "sourceRoot": "apps/server-prod/src",
      "tags": ["scope:server-prod", "type:application"]
    },
    "tools": {
      "$schema": "../node_modules/nx/schemas/project-schema.json",
      "architect": {
        "compodoc-build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "compodoc -p tsconfig.compodoc.json -d ./dist/compodoc; cp -r ./dist/compodoc ./dist/apps/documentation/assets",
                "forwardAllArgs": false
              }
            ]
          }
        },
        "compodoc-serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "compodoc -p tsconfig.compodoc.json -s",
                "forwardAllArgs": false
              }
            ]
          }
        },
        "coverage-stats": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/coverage-stats.ts"
              }
            ]
          }
        },
        "help": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/package-commands.ts"
              }
            ]
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "eslintConfig": "tools/.eslintrc.json",
            "lintFilePatterns": ["tools/generators/**/*.ts", "tools/ts/**/*.ts"]
          }
        },
        "update-check": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/update.ts --check"
              }
            ]
          }
        },
        "update-migrate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/update.ts --check --jsonUpgraded; npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/update.ts --migrate=update; rm -rf migrations.json migrations-packages.json",
                "forwardAllArgs": false
              }
            ]
          }
        },
        "update-migrate-bulk-confirm": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/update.ts --check --jsonUpgraded; npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/update.ts --migrate=update --bulkUserChoice=true; rm -rf migrations.json migrations-packages.json",
                "forwardAllArgs": false
              }
            ]
          }
        },
        "update-migrate-only": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "yarn install && yarn ngcc && npx ts-node -P ./tools/tsconfig.ts-tools.json ./tools/ts/update.ts --migrate=only; rm -rf migrations.json migrations-packages.json",
                "forwardAllArgs": false
              }
            ]
          }
        }
      },
      "projectType": "application",
      "root": "tools",
      "sourceRoot": "tools/src",
      "tags": ["scope:tools", "type:workspace"]
    }
  },
  "version": 1
}
